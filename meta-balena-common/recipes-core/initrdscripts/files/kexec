#!/bin/sh

# shellcheck disable=SC1091
. /usr/libexec/os-helpers-logging

KERNEL_IMAGE="${ROOTFS_DIR}/boot/@@KERNEL_IMAGETYPE@@"

kexec_enabled() {
    if [ "$bootparam_balena_stage2" != "true" ]
    then
        return 1
    fi

    if [ "x${ROOTFS_DIR}" = "x" ]
    then
        info "ROOTFS_DIR undefined, skipping kexec"
        return 1
    fi

    if [ ! -f "${KERNEL_IMAGE}" ]
    then
        info "${KERNEL_IMAGE} not found, skipping kexec"
        return 1
    fi

    return 0
}

kexec_run() {
    ROOT_UUID=$(findmnt "${ROOTFS_DIR}" -n -o UUID -t "%%ROOTFS_TYPE%%")
    if [ -z "${ROOT_UUID}" ]; then
        fail "No valid root filesystem found"
    fi

    # Remove the following kernel arguments:
    # * balena_stage2 - not to enter this script again after kexec
    # * root=XXX - will be replaced by the UUID
    # * maxcpus=0 - enable SMP after reboot if the 2nd stage bootloader has it disabled
    BOOT_PARAMS="$(cat /proc/cmdline | sed -e s,balena_stage2,, | sed -e s,root=[^\ ]*,, | sed -e s,maxcpus=0,, | sed -e s,nr_cpus=[^\ ]*,,)"
    kexec -s -l "${KERNEL_IMAGE}" --append="${BOOT_PARAMS} root=UUID=${ROOT_UUID} ${KEXEC_EXTRA_ARGS}"

    umount "${ROOTFS_DIR}"

    kexec -e || fail "kexec failed with $?, abort"
}
