From ea3841590611f60f64902bd25a1a61b1e14b69e5 Mon Sep 17 00:00:00 2001
From: Petros Angelatos <petrosagg@gmail.com>
Date: Thu, 1 Dec 2016 01:35:53 +0000
Subject: [PATCH 15/15] pkg/archive: use fadvise to prevent pagecache thrashing

During a docker pull a very large amount of files are touched during
unpacking. This causes linux to fill up the page cache with entries that
most probably won't be used.

There are two issues with this. The first one is that by putting a lot
of pressure on the page cache memory fragmentation occurs. This can
cause filesystem corruption on some platforms that can't handle memory
allocation failures correctly.

The second issue is that by not hinting our intentions to the kernel, we
might evict useful pages from the cache that could be in use by some
running container, and therefore affecting the performance of the
application.

Upstream-Status: Pending
Signed-off-by: Petros Angelatos <petrosagg@gmail.com>
---
 pkg/archive/archive.go | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/pkg/archive/archive.go b/pkg/archive/archive.go
index 616a05d..cc492dc 100644
--- a/pkg/archive/archive.go
+++ b/pkg/archive/archive.go
@@ -18,6 +18,7 @@ import (
 	"syscall"
 
 	"github.com/Sirupsen/logrus"
+	"github.com/docker/docker/pkg/fadvise"
 	"github.com/docker/docker/pkg/fileutils"
 	"github.com/docker/docker/pkg/idtools"
 	"github.com/docker/docker/pkg/ioutils"
@@ -465,6 +466,19 @@ func createTarFile(path, extractDir string, hdr *tar.Header, reader io.Reader, L
 		return err
 	}
 
+	if hdr.Typeflag == tar.TypeReg || hdr.Typeflag == tar.TypeRegA {
+		file, err := os.Open(path)
+		if err != nil {
+			file.Close()
+			return err
+		}
+		if err := fadvise.PosixFadvise(file, 0, 0, fadvise.POSIX_FADV_DONTNEED); err != nil {
+			file.Close()
+			return err
+		}
+		file.Close()
+	}
+
 	return nil
 }
 
-- 
2.10.2

