#!/bin/bash

help () {
    cat << EOF
Script for reporting device progress
resin-device-progress [options]

Options:
    -h, --help
        Display this help and exit.

    -c, --config-path CONFIG_PATH
        Use a non default config.json file.
        This argument is passed to resin-vars script.

    -p, --percentage PERCENTAGE
        Define progress in percentage

    -s, --state STATE
        String describing the current state.
EOF
}

# Parse arguments
while [ "$#" -gt "0" ]; do
    key=$1
    case $key in
        -h|--help)
            help
            exit 0
            ;;
        -c|--config-path)
            RESIN_VARS_ARGS="$RESIN_VARS_ARGS --config-path $2"
            shift
            ;;
        -p|--percentage)
            PERCENTAGE=$2
            shift
            ;;
        -s|--state)
            STATE=$2
            shift
            ;;
        *)
            echo "[WARNING] $0 : Argument '$1' unknown. Ignoring."
            ;;
    esac
    shift
done

source /usr/sbin/resin-vars "$RESIN_VARS_ARGS"

echo "-- $0 $PERCENTAGE $STATE $API_ENDPOINT $CONFIG_PATH" >> /var/log/provisioning-progress.log
if [ -z "$PERCENTAGE" -o -z "$STATE" -o -z "$API_ENDPOINT" -o -z "$CONFIG_PATH" ]; then
    echo "[ERROR] resin-device-progress : Needed variables not provided."
    exit 1
fi

if [ "$(jq ".registered_at | length" "$CONFIG_PATH")" -eq 0 ]; then
    echo "[ERROR] resin-device-progress : Device registration not complete, provisioning progress cannot be reported."
    exit 1
fi

if [ "$(jq ".deviceId | length" "$CONFIG_PATH")" -eq 0 ]; then
    echo "[ERROR] resin-device-progress : Device id (deviceId) missing from config file, provisioning progress cannot be reported."
    exit 1
fi

# If the user api key exists we use it instead of the deviceApiKey as it means we haven't done the key exchange yet
read device_api_key device_id <<<$(jq -r '.apiKey // .deviceApiKey,.deviceId' "$CONFIG_PATH")

curl -s -X PATCH "$API_ENDPOINT/v1/device($device_id)?apikey=$device_api_key" \
     -o "/var/log/provisioning-progress-curl-$PERCENTAGE.log" \
     --data-urlencode "provisioning_progress=$PERCENTAGE" \
     --data-urlencode "provisioning_state=$STATE" \
     --data-urlencode "status=configuring"

exit 0
